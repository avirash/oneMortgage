{
	"lender": "Virgin Money",
	"logo": "virginmoney",
	"domain": "intermediaries.virginmoney.com",
	"affordability": "https://intermediaries.virginmoney.com/tools/affordability-calculator/loan/9d60fb80-eec2-4b5d-9431-a89a604c8c0f",
	"mapping": {
		"waitFor": 1500,
		"typeOfOwnerShip": {
			"css": "[name='ApplicationType']",
			"logic": "('@value' === 'Help to Buy') ? 'Help to Buy Equity Loan' : (['Shared Equity','Other'].includes('@value')) ? 'Residential' : 'Custom Build'",
			"Residential": {
				"methodOfRepayment": {
					"css": "[name='RepaymentMethod']",
					"logic": "('@value' === 'Capital and interest') ? 'Repayment' : ('@value' === 'Interest only') ?  'Interest Only' : 'Part And Part'",
					"Repayment": {
						"mortgageTermYears": {
							"css": "#LoanTerm"
						},
						"propertyValue": {
							"css": "#PropertyValue"
						},
						"loanValue": {
							"css": "#LoanRequired"
						},
						"requiredInterest": {
							"css": "#IOLoanRequired",
							"logic": "parseInt(input[propertyValue]) - parseInt(input[loanValue])"
						}
					},
					"Interest Only": {
						"mortgageTermYears": {
							"css": "#LoanTerm"
						},
						"propertyValue": {
							"css": "#PropertyValue"
						},
						"loanValue": {
							"css": "#LoanRequired"
						},
						"requiredInterest": {
							"css": "#IOLoanRequired",
							"logic": "parseInt(input[propertyValue]) - parseInt(input[loanValue])"
						}
					},
					"Part And Part": {
						"mortgageTermYears": {
							"css": "#LoanTerm"
						},
						"propertyValue": {
							"css": "#PropertyValue"
						},
						"capitalAndInterestAmount": {
							"css": "#RepayLoanRequired"
						},
						"requiredInterest": {
							"css": "#IOLoanRequired"
						}
					}
				}
			},
			"Help to Buy Equity Loan": {
				"css": "#ApplicationTypeHTBEquity",
				"mortgageTermYears": {
					"css": "#LoanTerm"
				},
				"propertyValue": {
					"css": "#PropertyValue"
				},
				"equityLoan": {
					"css": "#HelpToBuyAmount"
				},
				"loanValue": {
					"css": "#LoanRequired"
				},
				"HelpToBuyLocation": {
					"css": "#HelpToBuyLocation",
					"logic": "'England'",
					"new": true
				}
			},
			"Custom Build": {
				"css": "#ApplicationTypeCustomBuild",
				"mortgageTermYears": {
					"css": "#LoanTerm"
				},
				"propertyValue": {
					"css": "#PropertyValue"
				},
				"loanValue": {
					"css": "#LoanRequired"
				}
			},
			"Shared Ownership": {
				"css": "#ApplicationTypeSharedOwnership",
				"mortgageTermYears": {
					"css": "#LoanTerm"
				},
				"propertyValue": {
					"css": "#PropertyValue"
				},
				"loanValue": {
					"css": "#LoanRequired"
				},
				"percentageShareToPurchased": {
					"css": "#PercentageShare"
				}
			}
		},
		"click1": "#affCalcForm > div.formContents > div.last > span > input",
		"numOfApplying": {
			"css": "[name='NumberOfApplicants']"
		},
		"numOfdependants": {
			"css": "#Dependants",
			"logic": "parseInt(input[childUnder5]) + parseInt(input[childUnder11]) + parseInt(input[childUnder17]) + parseInt(input[childOver18])",
			"new": true
		},
		"applicantAge1": {
			"css": "#Age0",
			"logic": "(new Date().getFullYear() - parseInt(input[yearOfBirth1]))",
			"new": true
		},
		"employmentStatus1": {
			"css": "#Employment0",
			"Employed": {
				"annualIncome1": {
					"css": "#Applicant0_GrossAnnual"
				},
				"overtimeBonusComission1": {
					"css": "#Applicant0_OvertimeAnnual",
					"logic": "input[annualBonus1] + input[totalOvertimeAnnually1] + input[totalCommissionAnnually1]",
					"new": true
				}
			},
			"Self-employed": {
				"netProfitLatestPeriod1": {
					"css": "#Applicant0_NetProfitMostRecent",
					"logic": "(input[salaryForDirectorLimit1] || 0) + input[netProfitLatestPeriod1]"
				},
				"netProfitPreviousPeriod1": {
					"css": "#Applicant0_NetProfitNextMostRecent"
				}
			},
			"Retired": {
				"retiredIncome1": {
					"css": "#Applicant0_GrossAnnual",
					"logic": "(input[secondJob1] || 0) + (input[occupationalPension1] || 0) + (input[disablementBenefit1] || 0) + (input[drawdownOnPensionFund1] || 0) + (input[dividendIncome1] || 0) + (input[investmentIncome1] || 0) + (input[companyOwnerIncome1] || 0) + (input[maintenancePayments1] || 0) + (input[rentalIncome1] || 0) + (input[fosteringIncome1] || 0) + (input[otherIncome1] || 0) + (input[carAllowance1] || 0) + (input[weightingLargeTown1] || 0) + (input[permanentShiftAllowance1] || 0) + (input[indefiniteMortgageSubsidies1] || 0) + (input[long-termMortgageSubsidies1] || 0) + (input[childBenefit1] || 0) + (input[childTaxCredits1] || 0) + (input[workingTaxCredits1] || 0) + (input[indefiniteStateBenefits1] || 0) + (input[pensionsAndAnnuities1] || 0) + (input[statePension1] || 0)",
					"new": true
				}
			},
			"On Contract": {
				"annualIncome1": {
					"css": "#Applicant0_GrossAnnual"
				}
			},
			"Not Employed": {
				"notEmployed1": {
					"css": "#Applicant0_GrossAnnual",
					"logic": "(input[secondJob1] || 0) + (input[occupationalPension1] || 0) + (input[disablementBenefit1] || 0) + (input[drawdownOnPensionFund1] || 0) + (input[dividendIncome1] || 0) + (input[investmentIncome1] || 0) + (input[companyOwnerIncome1] || 0) + (input[maintenancePayments1] || 0) + (input[rentalIncome1] || 0) + (input[fosteringIncome1] || 0) + (input[otherIncome1] || 0) + (input[carAllowance1] || 0) + (input[weightingLargeTown1] || 0) + (input[permanentShiftAllowance1] || 0) + (input[indefiniteMortgageSubsidies1] || 0) + (input[long-termMortgageSubsidies1] || 0) + (input[childBenefit1] || 0) + (input[childTaxCredits1] || 0) + (input[workingTaxCredits1] || 0) + (input[indefiniteStateBenefits1] || 0) + (input[pensionsAndAnnuities1] || 0) + (input[statePension1] || 0)",
					"new": true
				}
			}
		},
		"applicantAge2": {
			"css": "#Age1",
			"logic": "(new Date().getFullYear() - parseInt(input[yearOfBirth2]))",
			"new": true
		},
		"employmentStatus2": {
			"css": "#Employment1",
			"Employed": {
				"annualIncome2": {
					"css": "#Applicant1_GrossAnnual"
				},
				"overtimeBonusComission2": {
					"css": "#Applicant1_OvertimeAnnual",
					"logic": "input[annualBonus2] + input[totalOvertimeAnnually2] + input[totalCommissionAnnually2]",
					"new": true
				}
			},
			"Self-employed": {
				"netProfitLatestPeriod2": {
					"css": "#Applicant1_NetProfitMostRecent",
					"logic": "(input[salaryForDirectorLimit2] || 0) + input[netProfitLatestPeriod2]"
				},
				"netProfitPreviousPeriod2": {
					"css": "#Applicant1_NetProfitNextMostRecent"
				}
			},
			"Retired": {
				"retiredIncome2": {
					"css": "#Applicant1_GrossAnnual",
					"logic": "(input[secondJob2] || 0) + (input[occupationalPension2] || 0) + (input[disablementBenefit2] || 0) + (input[drawdownOnPensionFund2] || 0) + (input[dividendIncome2] || 0) + (input[investmentIncome2] || 0) + (input[companyOwnerIncome2] || 0) + (input[maintenancePayments2] || 0) + (input[rentalIncome2] || 0) + (input[fosteringIncome2] || 0) + (input[otherIncome2] || 0) + (input[carAllowance2] || 0) + (input[weightingLargeTown2] || 0) + (input[permanentShiftAllowance2] || 0) + (input[indefiniteMortgageSubsidies2] || 0) + (input[long-termMortgageSubsidies2] || 0) + (input[childBenefit2] || 0) + (input[childTaxCredits2] || 0) + (input[workingTaxCredits2] || 0) + (input[indefiniteStateBenefits2] || 0) + (input[pensionsAndAnnuities2] || 0) + (input[statePension2] || 0)",
					"new": true
				}
			},
			"On Contract": {
				"annualIncome2": {
					"css": "#Applicant1_GrossAnnual"
				}
			},
			"Not Employed": {
				"notEmployed2": {
					"css": "#Applicant1_GrossAnnual",
					"logic": "(input[secondJob2] || 0) + (input[occupationalPension2] || 0) + (input[disablementBenefit2] || 0) + (input[drawdownOnPensionFund2] || 0) + (input[dividendIncome2] || 0) + (input[investmentIncome2] || 0) + (input[companyOwnerIncome2] || 0) + (input[maintenancePayments2] || 0) + (input[rentalIncome2] || 0) + (input[fosteringIncome2] || 0) + (input[otherIncome2] || 0) + (input[carAllowance2] || 0) + (input[weightingLargeTown2] || 0) + (input[permanentShiftAllowance2] || 0) + (input[indefiniteMortgageSubsidies2] || 0) + (input[long-termMortgageSubsidies2] || 0) + (input[childBenefit2] || 0) + (input[childTaxCredits2] || 0) + (input[workingTaxCredits2] || 0) + (input[indefiniteStateBenefits2] || 0) + (input[pensionsAndAnnuities2] || 0) + (input[statePension2] || 0)",
					"new": true
				}
			}
		},
		"click2": "#affCalcForm > div.formContents > div.last > span > input",
		"detailedFormExpanded": {
			"css": "[name='detailedFormExpanded']",
			"logic": "(input[childcareAndEducation] > 0 || input[healthInsurancePayments] > 0 || input[privatePensions] > 0 || input[buildingContentsInsurance] > 0 || input[groundRent] > 0 || input[serviceCharge] > 0) ? 'Yes' : 'No'",
			"new": true,
			"Yes": {
				"childcareAndEducation": {
					"css": "#childcareEducation"
				},
				"healthInsurancePayments": {
					"css": "#insuranceInvestment",
					"logic": "input[healthInsurancePayments] + input[privatePensions] + input[buildingContentsInsurance]"
				}
			},
			"No": {
				"additionalCommittedExpenditure": {
					"css": "#totalExpenditure"
				}
			}
		},
		"groundRent": {
			"css": "#monthlyGroundRent"
		},
		"serviceCharge": {
			"css": "#monthlyServiceCharge",
			"logic": "input[otherCommittedPayments] + input[serviceCharge]"
		},
		"otherMortgagePayments": {
			"css": "[name='otherMortgages']",
			"logic": "(@value > 0) ? 'Yes' : 'No'",
			"Yes": {
				"otherMortgagePayments": {
					"css": "#mortgageRemain"
				}
			},
			"No": {

			}
		},
		"creditCardBalances": {
			"css": "#cardDebtToRemain"
		},
		"monthlyLoanPayments": {
			"css": "#monthlyLoanToRemain",
			"logic": "input[monthlyHirePurchasePayments] + input[monthlyLoanPayments] + input[totalCreditCards]"
		},
		"click3": "#affCalcForm > div.formContents > div.last > span > input"
	},
	"extraction": {
		"price": {
			"css": ".results  strong:last"
		}
	},
	"screenshot": {
		"removeAttr": {
			"css": "#affCalcForm > div.formContents > div.last > a.learnmore.print",
			"attr": "target"
		},
		"css": "#affCalcForm > div.formContents > div.last > a.learnmore.print",
		"type": "screenshot",
		"waitFor": 5000
	}
}
